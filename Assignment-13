Question 18: Create a clock. What will be your approach to solving this problem statement?
Hint 1:- Use flutter inbuilt library
Hint 2:- Use only a timer.
Hint 3:- Clock runs only for 1 sec.
source code:
import 'dart:async';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart'; // Optional: for better time formatting

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Clock Example',
      home: ClockScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class ClockScreen extends StatefulWidget {
  @override
  _ClockScreenState createState() => _ClockScreenState();
}

class _ClockScreenState extends State<ClockScreen> {
  late Timer _timer;
  String _timeString = "";

  @override
  void initState() {
    super.initState();
    _getCurrentTime(); // initialize immediately
    _timer = Timer.periodic(Duration(seconds: 1), (Timer t) => _getCurrentTime());
  }

  void _getCurrentTime() {
    final String formattedTime = DateFormat('HH:mm:ss').format(DateTime.now());
    setState(() {
      _timeString = formattedTime;
    });
  }

  @override
  void dispose() {
    _timer.cancel(); // Stop timer when widget is destroyed
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: Center(
        child: Text(
          _timeString,
          style: TextStyle(
            color: Colors.greenAccent,
            fontSize: 60,
            fontWeight: FontWeight.bold,
            letterSpacing: 2,
          ),
        ),
      ),
    );
  }
}
