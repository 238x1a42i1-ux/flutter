Question 2: Create an alertDialog form with name, last name, email, and phone number and store all data in shared preferences and show it in UI after submitting the data. What will be your approach to solving this problem statement?
Hint 1:- Use the alert dialog box and textformfield.
Hint 2:- Use the shared preferences library to store the data of all fields.
source code:
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(AlertFormApp());
}

class AlertFormApp extends StatefulWidget {
  @override
  _AlertFormAppState createState() => _AlertFormAppState();
}

class _AlertFormAppState extends State<AlertFormApp> {
  String? name, lastName, email, phoneNumber;

  @override
  void initState() {
    super.initState();
    _loadSavedData();
  }

  Future<void> _loadSavedData() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      name = prefs.getString('name') ?? '';
      lastName = prefs.getString('lastName') ?? '';
      email = prefs.getString('email') ?? '';
      phoneNumber = prefs.getString('phoneNumber') ?? '';
    });
  }

  Future<void> _saveData(
      String name, String lastName, String email, String phone) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    await prefs.setString('name', name);
    await prefs.setString('lastName', lastName);
    await prefs.setString('email', email);
    await prefs.setString('phoneNumber', phone);

    _loadSavedData(); // Refresh UI with new data
  }

  final _formKey = GlobalKey<FormState>();

  void _showInputDialog() {
    String tempName = '';
    String tempLastName = '';
    String tempEmail = '';
    String tempPhone = '';

    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Enter your details'),
          content: SingleChildScrollView(
            child: Form(
              key: _formKey,
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  // Name
                  TextFormField(
                    decoration: InputDecoration(labelText: 'Name'),
                    validator: (value) {
                      if (value == null || value.trim().isEmpty) {
                        return 'Please enter your name';
                      }
                      return null;
                    },
                    onSaved: (value) {
                      tempName = value!.trim();
                    },
                  ),

                  // Last Name
                  TextFormField(
                    decoration: InputDecoration(labelText: 'Last Name'),
                    validator: (value) {
                      if (value == null || value.trim().isEmpty) {
                        return 'Please enter your last name';
                      }
                      return null;
                    },
                    onSaved: (value) {
                      tempLastName = value!.trim();
                    },
                  ),

                  // Email
                  TextFormField(
                    decoration: InputDecoration(labelText: 'Email'),
                    keyboardType: TextInputType.emailAddress,
                    validator: (value) {
                      if (value == null || value.trim().isEmpty) {
                        return 'Please enter email';
                      }
                      // Basic email validation
                      if (!RegExp(r'\S+@\S+\.\S+').hasMatch(value.trim())) {
                        return 'Please enter a valid email';
                      }
                      return null;
                    },
                    onSaved: (value) {
                      tempEmail = value!.trim();
                    },
                  ),

                  // Phone Number
                  TextFormField(
                    decoration: InputDecoration(labelText: 'Phone Number'),
                    keyboardType: TextInputType.phone,
                    validator: (value) {
                      if (value == null || value.trim().isEmpty) {
                        return 'Please enter phone number';
                      }
                      if (!RegExp(r'^\d{10}$').hasMatch(value.trim())) {
                        return 'Enter valid 10 digit phone number';
                      }
                      return null;
                    },
                    onSaved: (value) {
                      tempPhone = value!.trim();
                    },
                  ),
                ],
              ),
            ),
          ),
          actions: [
            TextButton(
              child: Text('Cancel'),
              onPressed: () {
                Navigator.pop(context); // close dialog
              },
            ),
            ElevatedButton(
              child: Text('Submit'),
              onPressed: () {
                if (_formKey.currentState!.validate()) {
                  _formKey.currentState!.save();

                  _saveData(tempName, tempLastName, tempEmail, tempPhone);

                  Navigator.pop(context); // close dialog
                }
              },
            ),
          ],
        );
      },
    );
  }

  Widget _buildDisplayData() {
    if ((name?.isEmpty ?? true) &&
        (lastName?.isEmpty ?? true) &&
        (email?.isEmpty ?? true) &&
        (phoneNumber?.isEmpty ?? true)) {
      return Text(
        'No data saved yet. Click the button to add details.',
        style: TextStyle(fontSize: 18),
        textAlign: TextAlign.center,
      );
    }
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('Name: $name', style: TextStyle(fontSize: 18)),
        SizedBox(height: 5),
        Text('Last Name: $lastName', style: TextStyle(fontSize: 18)),
        SizedBox(height: 5),
        Text('Email: $email', style: TextStyle(fontSize: 18)),
        SizedBox(height: 5),
        Text('Phone Number: $phoneNumber', style: TextStyle(fontSize: 18)),
      ],
    );
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'AlertDialog Form & SharedPreferences',
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(
          title: Text('User Details Form'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Center(
            child: _buildDisplayData(),
          ),
        ),
        floatingActionButton: FloatingActionButton(
          onPressed: _showInputDialog,
          child: Icon(Icons.edit),
          tooltip: 'Enter Details',
        ),
      ),
    );
  }
}
